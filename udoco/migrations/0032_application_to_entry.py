# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2017-02-20 05:21
from __future__ import unicode_literals

from django.db import migrations


def move_applications_to_entries(apps, schema_editor):
    from udoco.choices import (
        OfficialPositions, SkatingPositions, NonskatingPositions)

    fields = [
        'so_first_choice', 'so_second_choice', 'so_third_choice',
        'nso_first_choice', 'nso_second_choice', 'nso_third_choice',
    ]
    so_preference_map = {
        SkatingPositions.HEAD_REF: OfficialPositions.HEAD_REF,
        SkatingPositions.INSIDE_PACK_REF: OfficialPositions.INSIDE_PACK_REF,
        SkatingPositions.JAM_REF: OfficialPositions.JAM_REF,
        SkatingPositions.OUTSIDE_PACK_REF: OfficialPositions.OUTSIDE_PACK_REF,
        SkatingPositions.ALT: OfficialPositions.ALT,
    }
    nso_preference_map = {
        NonskatingPositions.JAM_TIMER: OfficialPositions.JAM_TIMER,
        NonskatingPositions.SCORE_KEEPER: OfficialPositions.SCORE_KEEPER,
        NonskatingPositions.PENALTY_BOX_MANAGER: OfficialPositions.PENALTY_BOX_MANAGER,
        NonskatingPositions.PENALTY_BOX_TIMER: OfficialPositions.PENALTY_BOX_TIMER,
        NonskatingPositions.PENALTY_TRACKER: OfficialPositions.PENALTY_TRACKER,
        NonskatingPositions.PENALTY_WRANGLER: OfficialPositions.PENALTY_WRANGLER,
        NonskatingPositions.INSIDE_WHITEBOARD: OfficialPositions.INSIDE_WHITEBOARD,
        NonskatingPositions.LINEUP_TRACKER: OfficialPositions.LINEUP_TRACKER,
        NonskatingPositions.SCOREBOARD_OPERATOR: OfficialPositions.SCOREBOARD_OPERATOR,
    }

    Application = apps.get_model('udoco', 'Application')
    ApplicationEntry = apps.get_model('udoco', 'ApplicationEntry')

    for application in Application.objects.all():
        idx = 0
        for field in fields:
            val = getattr(application, field)
            if val != 100:
                if field.startswith('so'):
                    preference = so_preference_map[val]
                else:
                    preference = nso_preference_map[val]
                entry = ApplicationEntry.objects.create(
                    official=application.official, event=application.game,
                    preference=preference, index=idx)
                entry.save()
                idx += 1


class Migration(migrations.Migration):

    dependencies = [
        ('udoco', '0031_auto_20170213_0627'),
    ]

    operations = [
        migrations.RunPython(move_applications_to_entries),
    ]
